import { z } from "zod";

export const userSchema = z.object({
	id: z.number(),
	name: z.string(),
	loginName: z.string(),
	password: z.string(),
	description: z.string().optional(),
	updatedBy: z.string().optional(),
	updatedAt: z.string().optional(),
	createdBy: z.string().optional(),
	createdAt: z.string().optional(),
	lastLogin: z.string().optional(),
	status: z.number().optional(),
	passwordChanged: z.number().optional(),
	passwordChangeable: z.number().optional(),
	passwordValidTo: z.string().optional(),
	passwordResetToken: z.string().optional(),
	passwordResetTokenExpiredAt: z.string().optional(),
	passwordSalt: z.string().optional(),
});

export const authUserSchema = z.object({
	id: z.number(),
	name: z.string(),
	loginName: z.string(),
	password: z.string(),
	description: z.string().optional(),
	updatedBy: z.string().optional(),
	updatedAt: z.string().optional(),
	createdBy: z.string().optional(),
	createdAt: z.string().optional(),
	lastLogin: z.string().optional(),
	status: z.number().optional(),
	passwordChanged: z.number().optional(),
	passwordChangeable: z.number().optional(),
	passwordValidTo: z.string().optional(),
	passwordResetToken: z.string().optional(),
	passwordResetTokenExpiredAt: z.string().optional(),
	passwordSalt: z.string().optional(),
	roles: z.array(z.number()),
});

export const usersArraySchema = z.array(userSchema);

export const additionalDataSchema = z.object({
	id: z.number(),
	packingSlipId: z.number(),
	manufacturingDate: z.string().optional(),
	storageLocation: z.string().optional(),
	consumptionPoint: z.string().optional(),
	consignation: z.string().optional(),
	usageCode: z.string().optional(),
	dutiableGoods: z.string().optional(),
	batchNumber: z.string().optional(),
	shippingDate: z.string().optional(),
	changeCode: z.string().optional(),
	partNumberSupplier: z.string().optional(),
	quantity2: z.number().optional(),
	unitOfMeasure: z.string().optional(),
	countryOfOrigin: z.string().optional(),
	packingSlipText: z.string().optional(),
	status: z.string().optional(),
	updatedAt: z.string().optional(),
	updatedBy: z.string().optional(),
	createdAt: z.string().optional(),
	createdBy: z.string().optional(),
	binCode: z.string().optional(),
});

export const additionalPackagingSchema = z.object({
	id: z.number(),
	packingPositionId: z.number(),
	customerPackUnit: z.string(),
	supplierPackUnit: z.string(),
	qtyOfPackUnits: z.string(),
	createdAt: z.string(),
	createdBy: z.string(),
	updatedAt: z.string(),
	updatedBy: z.string(),
});

export const asnViewSchema = z.object({
	shipmentId: z.number(),
	status: z.number(),
	clientNumber: z.string(),
	supplierNumber: z.string(),
	plantName: z.string(),
	shipmentNumber: z.string(),
	createdAt: z.string(),
	updatedAt: z.string(),
	dataOrigin: z.string(),
	firstPackingSlipId: z.number(),
});

export const clientSchema = z.object({
	id: z.number(),
	number: z.string(),
	land: z.string(),
	name: z.string(),
	createdAt: z.string(),
	createdBy: z.string(),
	updatedAt: z.string(),
	updatedBy: z.string(),
	city: z.string(),
	zipCode: z.string(),
	status: z.string(),
	streetHouseNumber: z.string(),
	packageNumberPrefix: z.string(),
	adminClientId: z.string(),
	oftpTargetSystem: z.string(),
});

export const supplierSchema = z.object({
	id: z.number().optional(),
	name: z.string().optional(),
	number: z.string().optional(),
	clientId: z.number().optional(),
	adminUserId: z.number().optional(),
	streetHouseNumber: z.string().optional(),
	zipCode: z.string().optional(),
	city: z.string().optional(),
	land: z.string().optional(),
	phone: z.string().optional(),
	fax: z.string().optional(),
	email: z.string().optional(),
	status: z.string().optional(),
	labWarningInHours: z.number().optional(),
	updatedAt: z.string().optional(),
	updatedBy: z.string().optional(),
	createdAt: z.string().optional(),
	createdBy: z.string().optional(),
	ebWarningInHours: z.number().optional(),
	dunsNumber: z.string().optional(),
	labInfoInHours: z.number().optional(),
	bruInfoInHours: z.number().optional(),
	labWarningToClient: z.number().optional(),
	besWarningInHours: z.number().optional(),
	bewWarningInHours: z.number().optional(),
	bruWarningInHours: z.number().optional(),
	mabWarningInHours: z.number().optional(),
	concurrentEdi: z.number().optional(),
	asnNotificationInHours: z.number().optional(),
	asnWarningInHours: z.number().optional(),
});

export const suppliersArraySchema = z.array(supplierSchema);

export const createSupplierSchema = z.object({
	clientId: z.number(),
	number: z.string(),
	name: z.string(),
	streetHouseNumber: z.string(),
	zipCode: z.string(),
	city: z.string(),
	land: z.string(),
	phone: z.string(),
	fax: z.string(),
	email: z.string(),
});

export const updateSupplierSchema = z.object({
	id: z.number().optional(),
	adminUserId: z.number().optional(),
	clientId: z.number().optional(),
	number: z.string().optional(),
	name: z.string().optional(),
	streetHouseNumber: z.string().optional(),
	zipCode: z.string().optional(),
	city: z.string().optional(),
	land: z.string().optional(),
	phone: z.string().optional(),
	fax: z.string().optional(),
	email: z.string().optional(),
	status: z.string().optional(),
	labWarningInHours: z.number().optional(),
	updatedAt: z.string().optional(),
	updatedBy: z.string().optional(),
	createdAt: z.string().optional(),
	createdBy: z.string().optional(),
	ebWarningInHours: z.number().optional(),
	dunsNumber: z.string().optional(),
	labInfoInHours: z.number().optional(),
	bruInfoInHours: z.number().optional(),
	labWarningToClient: z.number().optional(),
	besWarningInHours: z.number().optional(),
	bewWarningInHours: z.number().optional(),
	bruWarningInHours: z.number().optional(),
	mabWarningInHours: z.number().optional(),
	concurrentEdi: z.number().optional(),
	asnNotificationInHours: z.number().optional(),
	asnWarningInHours: z.number().optional(),
});

export const insertUserSchema = z.object({
	name: z.string(),
	loginName: z.string(),
	phone: z.string(),
	fax: z.string(),
	mobileNumber: z.string(),
	email: z.string(),
	clientNumber: z.string(),
	password: z.string(),
});

export const shipmentSchema = z.object({
	id: z.number(),
	clientNumber: z.string(),
	supplierNumber: z.string(),
	customerNumber: z.string(),
	status: z.number(),
	creationDate: z.string(),
	plantDescription: z.string(),
	shipmentNumber: z.string(),
	packagingType: z.string(),
	qtyInPackage: z.number(),
	shipmentGrossWeight: z.number(),
	shipmentNetWeight: z.number(),
	supplierPlant: z.string(),
	supplierPlantCountry: z.string(),
	supplierPlantZipCode: z.string(),
	estimatedArrivalDate: z.string(),
	estimatedArrivalTime: z.string(),
	inCoTerms: z.string(),
	transportMode: z.string(),
	transportKey: z.string(),
	transportNumber: z.string(),
	transportType: z.string(),
	hazardousGoods: z.string(),
	transportPartnerNo: z.string(),
	carrier: z.string(),
	updatedAt: z.string(),
	updatedBy: z.string(),
	createdAt: z.string(),
	createdBy: z.string(),
	shipmentDate: z.string(),
	shipmentTime: z.string(),
	plantNumber: z.string(),
	kindOfTransport: z.string(),
	orderingKey: z.string(),
	unitOfMeasure: z.string(),
	serialLabelNoPrefix: z.number(),
});

export const userGroupIdsSchema = z.array(z.number());

export const labSchema = z.object({
	id: z.number(),
	customerDescription: z.string().optional(),
	customerStreetHouseNumber: z.string().optional(),
	customerLand: z.string().optional(),
	customerZipCode: z.string().optional(),
	customerCity: z.string().optional(),
	customerContactPersonName: z.string().optional(),
	customerPurchasingGroup: z.string().optional(),
	customerIdentification: z.string().optional(),
	customerPhone: z.string().optional(),
	customerFax: z.string().optional(),
	customerEmail: z.string().optional(),
	customerVat: z.string().optional(),
	customerNumber: z.string().optional(),
	supplierNumber: z.string().optional(),
	clientNumber: z.string().optional(),
	plantNumber: z.string().optional(),
	plantDescription: z.string().optional(),
	unloadingPoint: z.string().optional(),
	storagePoint: z.string().optional(),
	consumptionPoint: z.string().optional(),
	currentLabNumber: z.string().optional(),
	currentLabDate: z.string().optional(), // date
	lastLabNumber: z.string().optional(),
	lastLabDate: z.string().optional(), // date
	partNumber: z.string().optional(),
	materialDescription: z.string().optional(),
	productionReleaseDate: z.string().optional(),
	materialReleaseDate: z.string().optional(),
	orderNumber: z.string().optional(),
	freeText: z.string().optional(),
	unitOfMeasure: z.string().optional(),
	inputProgressCount: z.string().optional(),
	startDateEfz: z.string().optional(),
	resetEfz: z.string().optional(),
	status: z.string().optional(),
	readAt: z.string().optional(), // date
	inProgressFrom: z.string().optional(), // date
	closedAt: z.string().optional(), // date
	ediMessageKey: z.string().optional(),
	overtakeNumber: z.string().optional(),
	overtakeDate: z.string().optional(), // date
	updatedAt: z.string().optional(), // date
	updatedBy: z.string().optional(),
	createdAt: z.string().optional(), // date
	createdBy: z.string().optional(),
	deletionMark: z.string().optional(),
	labId: z.string().optional(),
	labFlag: z.string().optional(),
	key: z.string().optional(),
	orderPosition: z.string().optional(),
});

export const labsArraySchema = z.array(labSchema);
